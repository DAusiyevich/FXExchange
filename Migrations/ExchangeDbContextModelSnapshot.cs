// <auto-generated />
using FXExchange.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FXExchange.Migrations
{
    [DbContext(typeof(ExchangeDbContext))]
    partial class ExchangeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.10");

            modelBuilder.Entity("FXExchange.Data.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ISO")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Currency", (string)null);
                });

            modelBuilder.Entity("FXExchange.Data.ExchangeRate", b =>
                {
                    b.Property<int>("SourceCurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DestinationCurrencyId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Rate")
                        .HasColumnType("TEXT");

                    b.HasKey("SourceCurrencyId", "DestinationCurrencyId");

                    b.HasIndex("DestinationCurrencyId");

                    b.ToTable("ExchangeRate", (string)null);
                });

            modelBuilder.Entity("FXExchange.Data.ExchangeRate", b =>
                {
                    b.HasOne("FXExchange.Data.Currency", null)
                        .WithMany()
                        .HasForeignKey("DestinationCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FXExchange.Data.Currency", null)
                        .WithMany()
                        .HasForeignKey("SourceCurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
